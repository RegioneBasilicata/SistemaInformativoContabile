//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-01/24/2006 06:08 PM(kohsuke)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.09.27 at 01:25:11 AM CEST 
//


package it.latraccia.entity.sic.richiesta.impl;

public class BeneficiarioTypesImpl implements it.latraccia.entity.sic.richiesta.BeneficiarioTypes, com.sun.xml.bind.JAXBObject, it.latraccia.entity.sic.richiesta.impl.runtime.UnmarshallableObject, it.latraccia.entity.sic.richiesta.impl.runtime.XMLSerializable, it.latraccia.entity.sic.richiesta.impl.runtime.ValidatableObject
{

    protected boolean has_AddizionaleComunale;
    protected double _AddizionaleComunale;
    protected java.lang.String _CodiceCUP;
    protected java.lang.String _CodiceSIOPE;
    protected java.lang.String _CodiceSIOPEAggiuntivo;
    protected java.lang.String _CodiceCIG;
    protected boolean has_RitenutePrevidenzialiEnte;
    protected double _RitenutePrevidenzialiEnte;
    protected boolean has_DatoSensibile;
    protected boolean _DatoSensibile;
    protected java.lang.String _CodiceSede;
    protected boolean has_RitenutePrevidenzialiBen;
    protected double _RitenutePrevidenzialiBen;
    protected boolean has_ImponibileIrpef;
    protected double _ImponibileIrpef;
    protected java.lang.String _CodiceBeneficiario;
    protected boolean has_ImportoLordo;
    protected double _ImportoLordo;
    protected boolean has_AddizionaleRegionale;
    protected double _AddizionaleRegionale;
    protected boolean has_RitenuteIrpef;
    protected double _RitenuteIrpef;
    protected java.lang.String _CodiceTipoPagamento;
    protected java.lang.String _StampaAvviso;
    protected boolean has_AltreRitenute;
    protected double _AltreRitenute;
    protected java.lang.String _Bollo;
    protected boolean has_ImponibilePrevidenziale;
    protected double _ImponibilePrevidenziale;
    protected java.lang.String _EsenzCommBonifico;
    protected java.lang.String _CodiceContoCorrente;
    public final static java.lang.Class version = (it.latraccia.entity.sic.richiesta.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (it.latraccia.entity.sic.richiesta.BeneficiarioTypes.class);
    }

    public double getAddizionaleComunale() {
        return _AddizionaleComunale;
    }

    public void setAddizionaleComunale(double value) {
        _AddizionaleComunale = value;
        has_AddizionaleComunale = true;
    }

    public java.lang.String getCodiceCUP() {
        return _CodiceCUP;
    }

    public void setCodiceCUP(java.lang.String value) {
        _CodiceCUP = value;
    }

    public java.lang.String getCodiceSIOPE() {
        return _CodiceSIOPE;
    }

    public void setCodiceSIOPE(java.lang.String value) {
        _CodiceSIOPE = value;
    }

    public java.lang.String getCodiceSIOPEAggiuntivo() {
        return _CodiceSIOPEAggiuntivo;
    }

    public void setCodiceSIOPEAggiuntivo(java.lang.String value) {
        _CodiceSIOPEAggiuntivo = value;
    }

    public java.lang.String getCodiceCIG() {
        return _CodiceCIG;
    }

    public void setCodiceCIG(java.lang.String value) {
        _CodiceCIG = value;
    }

    public double getRitenutePrevidenzialiEnte() {
        return _RitenutePrevidenzialiEnte;
    }

    public void setRitenutePrevidenzialiEnte(double value) {
        _RitenutePrevidenzialiEnte = value;
        has_RitenutePrevidenzialiEnte = true;
    }

    public boolean isDatoSensibile() {
        return _DatoSensibile;
    }

    public void setDatoSensibile(boolean value) {
        _DatoSensibile = value;
        has_DatoSensibile = true;
    }

    public java.lang.String getCodiceSede() {
        return _CodiceSede;
    }

    public void setCodiceSede(java.lang.String value) {
        _CodiceSede = value;
    }

    public double getRitenutePrevidenzialiBen() {
        return _RitenutePrevidenzialiBen;
    }

    public void setRitenutePrevidenzialiBen(double value) {
        _RitenutePrevidenzialiBen = value;
        has_RitenutePrevidenzialiBen = true;
    }

    public double getImponibileIrpef() {
        return _ImponibileIrpef;
    }

    public void setImponibileIrpef(double value) {
        _ImponibileIrpef = value;
        has_ImponibileIrpef = true;
    }

    public java.lang.String getCodiceBeneficiario() {
        return _CodiceBeneficiario;
    }

    public void setCodiceBeneficiario(java.lang.String value) {
        _CodiceBeneficiario = value;
    }

    public double getImportoLordo() {
        return _ImportoLordo;
    }

    public void setImportoLordo(double value) {
        _ImportoLordo = value;
        has_ImportoLordo = true;
    }

    public double getAddizionaleRegionale() {
        return _AddizionaleRegionale;
    }

    public void setAddizionaleRegionale(double value) {
        _AddizionaleRegionale = value;
        has_AddizionaleRegionale = true;
    }

    public double getRitenuteIrpef() {
        return _RitenuteIrpef;
    }

    public void setRitenuteIrpef(double value) {
        _RitenuteIrpef = value;
        has_RitenuteIrpef = true;
    }

    public java.lang.String getCodiceTipoPagamento() {
        return _CodiceTipoPagamento;
    }

    public void setCodiceTipoPagamento(java.lang.String value) {
        _CodiceTipoPagamento = value;
    }

    public java.lang.String getStampaAvviso() {
        return _StampaAvviso;
    }

    public void setStampaAvviso(java.lang.String value) {
        _StampaAvviso = value;
    }

    public double getAltreRitenute() {
        return _AltreRitenute;
    }

    public void setAltreRitenute(double value) {
        _AltreRitenute = value;
        has_AltreRitenute = true;
    }

    public java.lang.String getBollo() {
        return _Bollo;
    }

    public void setBollo(java.lang.String value) {
        _Bollo = value;
    }

    public double getImponibilePrevidenziale() {
        return _ImponibilePrevidenziale;
    }

    public void setImponibilePrevidenziale(double value) {
        _ImponibilePrevidenziale = value;
        has_ImponibilePrevidenziale = true;
    }

    public java.lang.String getEsenzCommBonifico() {
        return _EsenzCommBonifico;
    }

    public void setEsenzCommBonifico(java.lang.String value) {
        _EsenzCommBonifico = value;
    }

    public java.lang.String getCodiceContoCorrente() {
        return _CodiceContoCorrente;
    }

    public void setCodiceContoCorrente(java.lang.String value) {
        _CodiceContoCorrente = value;
    }

    public it.latraccia.entity.sic.richiesta.impl.runtime.UnmarshallingEventHandler createUnmarshaller(it.latraccia.entity.sic.richiesta.impl.runtime.UnmarshallingContext context) {
        return new it.latraccia.entity.sic.richiesta.impl.BeneficiarioTypesImpl.Unmarshaller(context);
    }

    public void serializeBody(it.latraccia.entity.sic.richiesta.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("", "CodiceBeneficiario");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _CodiceBeneficiario), "CodiceBeneficiario");
        } catch (java.lang.Exception e) {
            it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "CodiceSede");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _CodiceSede), "CodiceSede");
        } catch (java.lang.Exception e) {
            it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "CodiceTipoPagamento");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _CodiceTipoPagamento), "CodiceTipoPagamento");
        } catch (java.lang.Exception e) {
            it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "CodiceContoCorrente");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _CodiceContoCorrente), "CodiceContoCorrente");
        } catch (java.lang.Exception e) {
            it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (_CodiceSIOPE!= null) {
            context.startElement("", "CodiceSIOPE");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _CodiceSIOPE), "CodiceSIOPE");
            } catch (java.lang.Exception e) {
                it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CodiceSIOPEAggiuntivo!= null) {
            context.startElement("", "CodiceSIOPEAggiuntivo");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _CodiceSIOPEAggiuntivo), "CodiceSIOPEAggiuntivo");
            } catch (java.lang.Exception e) {
                it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CodiceCUP!= null) {
            context.startElement("", "CodiceCUP");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _CodiceCUP), "CodiceCUP");
            } catch (java.lang.Exception e) {
                it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CodiceCIG!= null) {
            context.startElement("", "CodiceCIG");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _CodiceCIG), "CodiceCIG");
            } catch (java.lang.Exception e) {
                it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("", "EsenzCommBonifico");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _EsenzCommBonifico), "EsenzCommBonifico");
        } catch (java.lang.Exception e) {
            it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "StampaAvviso");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _StampaAvviso), "StampaAvviso");
        } catch (java.lang.Exception e) {
            it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "Bollo");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Bollo), "Bollo");
        } catch (java.lang.Exception e) {
            it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (has_ImportoLordo) {
            context.startElement("", "ImportoLordo");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDouble(((double) _ImportoLordo)), "ImportoLordo");
            } catch (java.lang.Exception e) {
                it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ImponibileIrpef) {
            context.startElement("", "ImponibileIrpef");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDouble(((double) _ImponibileIrpef)), "ImponibileIrpef");
            } catch (java.lang.Exception e) {
                it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_RitenuteIrpef) {
            context.startElement("", "RitenuteIrpef");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDouble(((double) _RitenuteIrpef)), "RitenuteIrpef");
            } catch (java.lang.Exception e) {
                it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_RitenutePrevidenzialiBen) {
            context.startElement("", "RitenutePrevidenzialiBen");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDouble(((double) _RitenutePrevidenzialiBen)), "RitenutePrevidenzialiBen");
            } catch (java.lang.Exception e) {
                it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_AltreRitenute) {
            context.startElement("", "AltreRitenute");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDouble(((double) _AltreRitenute)), "AltreRitenute");
            } catch (java.lang.Exception e) {
                it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ImponibilePrevidenziale) {
            context.startElement("", "ImponibilePrevidenziale");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDouble(((double) _ImponibilePrevidenziale)), "ImponibilePrevidenziale");
            } catch (java.lang.Exception e) {
                it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_RitenutePrevidenzialiEnte) {
            context.startElement("", "RitenutePrevidenzialiEnte");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDouble(((double) _RitenutePrevidenzialiEnte)), "RitenutePrevidenzialiEnte");
            } catch (java.lang.Exception e) {
                it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_AddizionaleComunale) {
            context.startElement("", "AddizionaleComunale");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDouble(((double) _AddizionaleComunale)), "AddizionaleComunale");
            } catch (java.lang.Exception e) {
                it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_AddizionaleRegionale) {
            context.startElement("", "AddizionaleRegionale");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDouble(((double) _AddizionaleRegionale)), "AddizionaleRegionale");
            } catch (java.lang.Exception e) {
                it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_DatoSensibile) {
            context.startElement("", "DatoSensibile");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _DatoSensibile)), "DatoSensibile");
            } catch (java.lang.Exception e) {
                it.latraccia.entity.sic.richiesta.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(it.latraccia.entity.sic.richiesta.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(it.latraccia.entity.sic.richiesta.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (it.latraccia.entity.sic.richiesta.BeneficiarioTypes.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com."
+"sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000"
+"\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Elem"
+"entExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentMode"
+"lq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000"
+"\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000%com.sun.msv"
+".datatype.xsd.PatternFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001[\u0000\bpatternst\u0000\u0013[Ljava/la"
+"ng/String;xr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalCo"
+"nstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTyp"
+"eWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\b"
+"baseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcr"
+"eteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNam"
+"et\u0000\u0012Ljava/lang/String;xr\u0000\'com.sun.msv.datatype.xsd.XSDatatyp"
+"eImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000(L\u0000\btypeNameq\u0000~\u0000(L\u0000\nwhite"
+"Spacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000p"
+"sr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000)t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringq\u0000~\u0000"
+"/\u0001q\u0000~\u00003t\u0000\u0007patternur\u0000\u0013[Ljava.lang.String;\u00ad\u00d2V\u00e7\u00e9\u001d{G\u0002\u0000\u0000xp\u0000\u0000\u0000\u0001t\u0000\u000e"
+"[0-9999999999]sr\u00000com.sun.msv.grammar.Expression$NullSetExpr"
+"ession\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005va"
+"luexp\u0000psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNam"
+"eq\u0000~\u0000(L\u0000\fnamespaceURIq\u0000~\u0000(xpt\u0000\u000estring-derivedq\u0000~\u0000,sr\u0000\u001dcom.su"
+"n.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.gr"
+"ammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u001axq\u0000"
+"~\u0000\u0003q\u0000~\u0000=psq\u0000~\u0000\u001eppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00001q\u0000~\u00004t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteS"
+"paceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000.q\u0000~\u0000;sq\u0000~\u0000>q\u0000~\u0000Hq\u0000~\u00004"
+"sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNa"
+"meq\u0000~\u0000(L\u0000\fnamespaceURIq\u0000~\u0000(xr\u0000\u001dcom.sun.msv.grammar.NameClass"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-inst"
+"ancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000<\u0001q\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0012CodiceBeneficiarioq\u0000~\u0000,sq\u0000"
+"~\u0000\u0019pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001eppsq\u0000~\u0000\"q\u0000~\u0000,pq\u0000~\u0000/\u0000\u0000q\u0000~\u00003q\u0000~\u00003q\u0000~\u00006uq\u0000~"
+"\u00007\u0000\u0000\u0000\u0001t\u0000\u000e[0-9999999999]q\u0000~\u0000;sq\u0000~\u0000>t\u0000\u000estring-derivedq\u0000~\u0000,sq\u0000~"
+"\u0000Appsq\u0000~\u0000Cq\u0000~\u0000=pq\u0000~\u0000Eq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\nCodiceSedeq\u0000~\u0000,sq\u0000~\u0000"
+"\u0019pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001eppsq\u0000~\u0000\"q\u0000~\u0000,pq\u0000~\u0000/\u0000\u0000q\u0000~\u00003q\u0000~\u00003q\u0000~\u00006uq\u0000~\u00007"
+"\u0000\u0000\u0000\u0001t\u0000\u000e[0-9999999999]q\u0000~\u0000;sq\u0000~\u0000>t\u0000\u000estring-derivedq\u0000~\u0000,sq\u0000~\u0000A"
+"ppsq\u0000~\u0000Cq\u0000~\u0000=pq\u0000~\u0000Eq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0013CodiceTipoPagamentoq\u0000~"
+"\u0000,sq\u0000~\u0000\u0019pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001eppsq\u0000~\u0000\"q\u0000~\u0000,pq\u0000~\u0000/\u0000\u0000q\u0000~\u00003q\u0000~\u00003q\u0000~\u0000"
+"6uq\u0000~\u00007\u0000\u0000\u0000\u0001t\u0000\u000e[0-9999999999]q\u0000~\u0000;sq\u0000~\u0000>t\u0000\u000estring-derivedq\u0000~\u0000"
+",sq\u0000~\u0000Appsq\u0000~\u0000Cq\u0000~\u0000=pq\u0000~\u0000Eq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0013CodiceContoCorr"
+"enteq\u0000~\u0000,sq\u0000~\u0000Appsq\u0000~\u0000\u0019q\u0000~\u0000=p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001eppsr\u0000\'com.sun.ms"
+"v.datatype.xsd.MaxLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com."
+"sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008a"
+"T\u0002\u0000\u0000xq\u0000~\u0000%q\u0000~\u0000,pq\u0000~\u0000/\u0000\u0001sr\u0000\'com.sun.msv.datatype.xsd.MinLengt"
+"hFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tminLengthxq\u0000~\u0000\u007fq\u0000~\u0000,pq\u0000~\u0000/\u0000\u0000q\u0000~\u00003q\u0000~\u00003t\u0000"
+"\tminLength\u0000\u0000\u0000\u0001q\u0000~\u00003t\u0000\tmaxLength\u0000\u0000\u0000\u0004q\u0000~\u0000;sq\u0000~\u0000>t\u0000\u000estring-deri"
+"vedq\u0000~\u0000,sq\u0000~\u0000Appsq\u0000~\u0000Cq\u0000~\u0000=pq\u0000~\u0000Eq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u000bCodiceSI"
+"OPEq\u0000~\u0000,q\u0000~\u0000Rsq\u0000~\u0000Appsq\u0000~\u0000\u0019q\u0000~\u0000=p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001eppsq\u0000~\u0000~q\u0000~\u0000"
+",pq\u0000~\u0000/\u0000\u0001sq\u0000~\u0000\u0081q\u0000~\u0000,pq\u0000~\u0000/\u0000\u0000q\u0000~\u00003q\u0000~\u00003q\u0000~\u0000\u0083\u0000\u0000\u0000\u0001q\u0000~\u00003q\u0000~\u0000\u0084\u0000\u0000\u0000"
+"\u0004q\u0000~\u0000;sq\u0000~\u0000>t\u0000\u000estring-derivedq\u0000~\u0000,sq\u0000~\u0000Appsq\u0000~\u0000Cq\u0000~\u0000=pq\u0000~\u0000Eq"
+"\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0015CodiceSIOPEAggiuntivoq\u0000~\u0000,q\u0000~\u0000Rsq\u0000~\u0000Appsq\u0000"
+"~\u0000\u0019q\u0000~\u0000=p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001eppsq\u0000~\u0000~q\u0000~\u0000,pq\u0000~\u0000/\u0000\u0001sq\u0000~\u0000\u0081q\u0000~\u0000,pq\u0000~"
+"\u0000/\u0000\u0000q\u0000~\u00003q\u0000~\u00003q\u0000~\u0000\u0083\u0000\u0000\u0000\u0001q\u0000~\u00003q\u0000~\u0000\u0084\u0000\u0000\u0000\u000fq\u0000~\u0000;sq\u0000~\u0000>t\u0000\u000estring-de"
+"rivedq\u0000~\u0000,sq\u0000~\u0000Appsq\u0000~\u0000Cq\u0000~\u0000=pq\u0000~\u0000Eq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\tCodice"
+"CUPq\u0000~\u0000,q\u0000~\u0000Rsq\u0000~\u0000Appsq\u0000~\u0000\u0019q\u0000~\u0000=p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001eppsq\u0000~\u0000~q\u0000~\u0000"
+",pq\u0000~\u0000/\u0000\u0001sq\u0000~\u0000\u0081q\u0000~\u0000,pq\u0000~\u0000/\u0000\u0000q\u0000~\u00003q\u0000~\u00003q\u0000~\u0000\u0083\u0000\u0000\u0000\u0001q\u0000~\u00003q\u0000~\u0000\u0084\u0000\u0000\u0000"
+"\u000fq\u0000~\u0000;sq\u0000~\u0000>t\u0000\u000estring-derivedq\u0000~\u0000,sq\u0000~\u0000Appsq\u0000~\u0000Cq\u0000~\u0000=pq\u0000~\u0000Eq"
+"\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\tCodiceCIGq\u0000~\u0000,q\u0000~\u0000Rsq\u0000~\u0000\u0019pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001e"
+"ppsq\u0000~\u0000\"q\u0000~\u0000,pq\u0000~\u0000/\u0000\u0000q\u0000~\u00003q\u0000~\u00003q\u0000~\u00006uq\u0000~\u00007\u0000\u0000\u0000\u0001t\u0000\u0003S|Nq\u0000~\u0000;sq\u0000"
+"~\u0000>t\u0000\u000estring-derivedq\u0000~\u0000,sq\u0000~\u0000Appsq\u0000~\u0000Cq\u0000~\u0000=pq\u0000~\u0000Eq\u0000~\u0000Nq\u0000~\u0000R"
+"sq\u0000~\u0000Lt\u0000\u0011EsenzCommBonificoq\u0000~\u0000,sq\u0000~\u0000\u0019pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001eppsq\u0000~"
+"\u0000\"q\u0000~\u0000,pq\u0000~\u0000/\u0000\u0000q\u0000~\u00003q\u0000~\u00003q\u0000~\u00006uq\u0000~\u00007\u0000\u0000\u0000\u0001t\u0000\u0003S|Nq\u0000~\u0000;sq\u0000~\u0000>t\u0000\u000e"
+"string-derivedq\u0000~\u0000,sq\u0000~\u0000Appsq\u0000~\u0000Cq\u0000~\u0000=pq\u0000~\u0000Eq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000L"
+"t\u0000\fStampaAvvisoq\u0000~\u0000,sq\u0000~\u0000\u0019pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001eppsq\u0000~\u0000\"q\u0000~\u0000,pq\u0000~"
+"\u0000/\u0000\u0000q\u0000~\u00003q\u0000~\u00003q\u0000~\u00006uq\u0000~\u00007\u0000\u0000\u0000\u0001t\u0000\u0003S|Nq\u0000~\u0000;sq\u0000~\u0000>t\u0000\u000estring-deri"
+"vedq\u0000~\u0000,sq\u0000~\u0000Appsq\u0000~\u0000Cq\u0000~\u0000=pq\u0000~\u0000Eq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0005Bolloq\u0000~"
+"\u0000,sq\u0000~\u0000Appsq\u0000~\u0000\u0019q\u0000~\u0000=p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001eppsr\u0000#com.sun.msv.datat"
+"ype.xsd.DoubleType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Fl"
+"oatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u00001q\u0000~\u00004t\u0000\u0006doubleq\u0000~\u0000Jq\u0000~\u0000;sq\u0000"
+"~\u0000>q\u0000~\u0000\u00daq\u0000~\u00004sq\u0000~\u0000Appsq\u0000~\u0000Cq\u0000~\u0000=pq\u0000~\u0000Eq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\fImp"
+"ortoLordoq\u0000~\u0000,q\u0000~\u0000Rsq\u0000~\u0000Appsq\u0000~\u0000\u0019q\u0000~\u0000=p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00d6sq\u0000~\u0000Ap"
+"psq\u0000~\u0000Cq\u0000~\u0000=pq\u0000~\u0000Eq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u000fImponibileIrpefq\u0000~\u0000,q\u0000~"
+"\u0000Rsq\u0000~\u0000Appsq\u0000~\u0000\u0019q\u0000~\u0000=p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00d6sq\u0000~\u0000Appsq\u0000~\u0000Cq\u0000~\u0000=pq\u0000~\u0000"
+"Eq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\rRitenuteIrpefq\u0000~\u0000,q\u0000~\u0000Rsq\u0000~\u0000Appsq\u0000~\u0000\u0019q\u0000~"
+"\u0000=p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00d6sq\u0000~\u0000Appsq\u0000~\u0000Cq\u0000~\u0000=pq\u0000~\u0000Eq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000"
+"\u0018RitenutePrevidenzialiBenq\u0000~\u0000,q\u0000~\u0000Rsq\u0000~\u0000Appsq\u0000~\u0000\u0019q\u0000~\u0000=p\u0000sq\u0000~"
+"\u0000\u0000ppq\u0000~\u0000\u00d6sq\u0000~\u0000Appsq\u0000~\u0000Cq\u0000~\u0000=pq\u0000~\u0000Eq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\rAltreRi"
+"tenuteq\u0000~\u0000,q\u0000~\u0000Rsq\u0000~\u0000Appsq\u0000~\u0000\u0019q\u0000~\u0000=p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00d6sq\u0000~\u0000Appsq"
+"\u0000~\u0000Cq\u0000~\u0000=pq\u0000~\u0000Eq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0017ImponibilePrevidenzialeq\u0000~"
+"\u0000,q\u0000~\u0000Rsq\u0000~\u0000Appsq\u0000~\u0000\u0019q\u0000~\u0000=p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00d6sq\u0000~\u0000Appsq\u0000~\u0000Cq\u0000~\u0000="
+"pq\u0000~\u0000Eq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0019RitenutePrevidenzialiEnteq\u0000~\u0000,q\u0000~\u0000R"
+"sq\u0000~\u0000Appsq\u0000~\u0000\u0019q\u0000~\u0000=p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00d6sq\u0000~\u0000Appsq\u0000~\u0000Cq\u0000~\u0000=pq\u0000~\u0000Eq"
+"\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0013AddizionaleComunaleq\u0000~\u0000,q\u0000~\u0000Rsq\u0000~\u0000Appsq\u0000~\u0000"
+"\u0019q\u0000~\u0000=p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00d6sq\u0000~\u0000Appsq\u0000~\u0000Cq\u0000~\u0000=pq\u0000~\u0000Eq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~"
+"\u0000Lt\u0000\u0014AddizionaleRegionaleq\u0000~\u0000,q\u0000~\u0000Rsq\u0000~\u0000Appsq\u0000~\u0000\u0019q\u0000~\u0000=p\u0000sq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u001eppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u00001q\u0000~\u00004t\u0000\u0007booleanq\u0000~\u0000Jq\u0000~\u0000;sq\u0000~\u0000>q\u0000~\u0001\u001eq\u0000~\u00004sq\u0000~\u0000Appsq"
+"\u0000~\u0000Cq\u0000~\u0000=pq\u0000~\u0000Eq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\rDatoSensibileq\u0000~\u0000,q\u0000~\u0000Rsr\u0000"
+"\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/"
+"Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun"
+".msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\r"
+"streamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool"
+";xp\u0000\u0000\u0000L\u0001pq\u0000~\u0000\u0016q\u0000~\u0000\u0014q\u0000~\u0000\u0006q\u0000~\u0000\u00f5q\u0000~\u0000\u00eeq\u0000~\u0000\u00e7q\u0000~\u0000\u00e0q\u0000~\u0000\u00d3q\u0000~\u0000\u00fcq\u0000~\u0001\u0003q"
+"\u0000~\u0001\nq\u0000~\u0001\u0011q\u0000~\u0000\u0013q\u0000~\u0000\u00ffq\u0000~\u0000\u00f8q\u0000~\u0000\u00f1q\u0000~\u0000\u00eaq\u0000~\u0000\u00e3q\u0000~\u0000\u00dcq\u0000~\u0000\u00cfq\u0000~\u0000\u00c3q\u0000~\u0000\u00b7q"
+"\u0000~\u0000\u00abq\u0000~\u0000\u008dq\u0000~\u0000\u009fq\u0000~\u0000\u0093q\u0000~\u0000\u0087q\u0000~\u0000vq\u0000~\u0000jq\u0000~\u0000^q\u0000~\u0000Bq\u0000~\u0000\u0010q\u0000~\u0000\u0018q\u0000~\u0000\u00c8q"
+"\u0000~\u0001\u0006q\u0000~\u0001\rq\u0000~\u0001\u0014q\u0000~\u0001 q\u0000~\u0000|q\u0000~\u0000\nq\u0000~\u0000\u0011q\u0000~\u0000oq\u0000~\u0000cq\u0000~\u0000Wq\u0000~\u0000\fq\u0000~\u0000\u0005q"
+"\u0000~\u0000\u008bq\u0000~\u0000\u000eq\u0000~\u0000\u00f7q\u0000~\u0000\u00f0q\u0000~\u0000\u00e9q\u0000~\u0000\u00e2q\u0000~\u0000\u00d5q\u0000~\u0000\u00feq\u0000~\u0001\u0005q\u0000~\u0001\fq\u0000~\u0001\u0013q\u0000~\u0000\u0015q"
+"\u0000~\u0000\u0007q\u0000~\u0000\u000bq\u0000~\u0000\u0017q\u0000~\u0001\u0018q\u0000~\u0000\u0097q\u0000~\u0000\tq\u0000~\u0000\u00a5q\u0000~\u0000\u00bcq\u0000~\u0000\u001dq\u0000~\u0000\rq\u0000~\u0000\bq\u0000~\u0000\u00b0q"
+"\u0000~\u0000zq\u0000~\u0000\u0012q\u0000~\u0000\u000fq\u0000~\u0001\u001aq\u0000~\u0000\u00a3q\u0000~\u0000\u0099x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends it.latraccia.entity.sic.richiesta.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(it.latraccia.entity.sic.richiesta.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------------------------------------------");
        }

        protected Unmarshaller(it.latraccia.entity.sic.richiesta.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return it.latraccia.entity.sic.richiesta.impl.BeneficiarioTypesImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  33 :
                        if (("ImportoLordo" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        state = 36;
                        continue outer;
                    case  54 :
                        if (("AddizionaleComunale" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 55;
                            return ;
                        }
                        state = 57;
                        continue outer;
                    case  42 :
                        if (("RitenutePrevidenzialiBen" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 43;
                            return ;
                        }
                        state = 45;
                        continue outer;
                    case  3 :
                        if (("CodiceSede" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        break;
                    case  15 :
                        if (("CodiceSIOPEAggiuntivo" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  63 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  36 :
                        if (("ImponibileIrpef" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 37;
                            return ;
                        }
                        state = 39;
                        continue outer;
                    case  45 :
                        if (("AltreRitenute" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 46;
                            return ;
                        }
                        state = 48;
                        continue outer;
                    case  39 :
                        if (("RitenuteIrpef" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 40;
                            return ;
                        }
                        state = 42;
                        continue outer;
                    case  12 :
                        if (("CodiceSIOPE" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  30 :
                        if (("Bollo" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        break;
                    case  27 :
                        if (("StampaAvviso" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        break;
                    case  0 :
                        if (("CodiceBeneficiario" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        break;
                    case  48 :
                        if (("ImponibilePrevidenziale" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 49;
                            return ;
                        }
                        state = 51;
                        continue outer;
                    case  21 :
                        if (("CodiceCIG" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  9 :
                        if (("CodiceContoCorrente" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        break;
                    case  57 :
                        if (("AddizionaleRegionale" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 58;
                            return ;
                        }
                        state = 60;
                        continue outer;
                    case  51 :
                        if (("RitenutePrevidenzialiEnte" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 52;
                            return ;
                        }
                        state = 54;
                        continue outer;
                    case  18 :
                        if (("CodiceCUP" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  60 :
                        if (("DatoSensibile" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 61;
                            return ;
                        }
                        state = 63;
                        continue outer;
                    case  24 :
                        if (("EsenzCommBonifico" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        break;
                    case  6 :
                        if (("CodiceTipoPagamento" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  33 :
                        state = 36;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  2 :
                        if (("CodiceBeneficiario" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  20 :
                        if (("CodiceCUP" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  63 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  14 :
                        if (("CodiceSIOPE" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  56 :
                        if (("AddizionaleComunale" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 57;
                            return ;
                        }
                        break;
                    case  35 :
                        if (("ImportoLordo" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  26 :
                        if (("EsenzCommBonifico" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  32 :
                        if (("Bollo" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  53 :
                        if (("RitenutePrevidenzialiEnte" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 54;
                            return ;
                        }
                        break;
                    case  50 :
                        if (("ImponibilePrevidenziale" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 51;
                            return ;
                        }
                        break;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  44 :
                        if (("RitenutePrevidenzialiBen" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 45;
                            return ;
                        }
                        break;
                    case  41 :
                        if (("RitenuteIrpef" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  62 :
                        if (("DatoSensibile" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 63;
                            return ;
                        }
                        break;
                    case  59 :
                        if (("AddizionaleRegionale" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 60;
                            return ;
                        }
                        break;
                    case  23 :
                        if (("CodiceCIG" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  47 :
                        if (("AltreRitenute" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 48;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("CodiceTipoPagamento" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  38 :
                        if (("ImponibileIrpef" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 39;
                            return ;
                        }
                        break;
                    case  60 :
                        state = 63;
                        continue outer;
                    case  5 :
                        if (("CodiceSede" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("CodiceSIOPEAggiuntivo" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("CodiceContoCorrente" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  29 :
                        if (("StampaAvviso" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  33 :
                        state = 36;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  63 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  60 :
                        state = 63;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  33 :
                        state = 36;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  63 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  60 :
                        state = 63;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  37 :
                            state = 38;
                            eatText2(value);
                            return ;
                        case  33 :
                            state = 36;
                            continue outer;
                        case  54 :
                            state = 57;
                            continue outer;
                        case  42 :
                            state = 45;
                            continue outer;
                        case  49 :
                            state = 50;
                            eatText3(value);
                            return ;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  63 :
                            revertToParentFromText(value);
                            return ;
                        case  7 :
                            state = 8;
                            eatText4(value);
                            return ;
                        case  36 :
                            state = 39;
                            continue outer;
                        case  45 :
                            state = 48;
                            continue outer;
                        case  52 :
                            state = 53;
                            eatText5(value);
                            return ;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  55 :
                            state = 56;
                            eatText6(value);
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  40 :
                            state = 41;
                            eatText7(value);
                            return ;
                        case  61 :
                            state = 62;
                            eatText8(value);
                            return ;
                        case  13 :
                            state = 14;
                            eatText9(value);
                            return ;
                        case  10 :
                            state = 11;
                            eatText10(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText11(value);
                            return ;
                        case  19 :
                            state = 20;
                            eatText12(value);
                            return ;
                        case  48 :
                            state = 51;
                            continue outer;
                        case  16 :
                            state = 17;
                            eatText13(value);
                            return ;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  34 :
                            state = 35;
                            eatText14(value);
                            return ;
                        case  57 :
                            state = 60;
                            continue outer;
                        case  31 :
                            state = 32;
                            eatText15(value);
                            return ;
                        case  51 :
                            state = 54;
                            continue outer;
                        case  25 :
                            state = 26;
                            eatText16(value);
                            return ;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  46 :
                            state = 47;
                            eatText17(value);
                            return ;
                        case  60 :
                            state = 63;
                            continue outer;
                        case  58 :
                            state = 59;
                            eatText18(value);
                            return ;
                        case  22 :
                            state = 23;
                            eatText19(value);
                            return ;
                        case  28 :
                            state = 29;
                            eatText20(value);
                            return ;
                        case  43 :
                            state = 44;
                            eatText21(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CodiceBeneficiario = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ImponibileIrpef = javax.xml.bind.DatatypeConverter.parseDouble(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ImponibileIrpef = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ImponibilePrevidenziale = javax.xml.bind.DatatypeConverter.parseDouble(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ImponibilePrevidenziale = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CodiceTipoPagamento = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RitenutePrevidenzialiEnte = javax.xml.bind.DatatypeConverter.parseDouble(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_RitenutePrevidenzialiEnte = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AddizionaleComunale = javax.xml.bind.DatatypeConverter.parseDouble(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_AddizionaleComunale = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RitenuteIrpef = javax.xml.bind.DatatypeConverter.parseDouble(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_RitenuteIrpef = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DatoSensibile = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_DatoSensibile = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CodiceSIOPE = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CodiceContoCorrente = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CodiceSede = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CodiceCUP = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CodiceSIOPEAggiuntivo = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText14(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ImportoLordo = javax.xml.bind.DatatypeConverter.parseDouble(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ImportoLordo = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText15(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Bollo = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText16(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EsenzCommBonifico = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText17(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AltreRitenute = javax.xml.bind.DatatypeConverter.parseDouble(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_AltreRitenute = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText18(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AddizionaleRegionale = javax.xml.bind.DatatypeConverter.parseDouble(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_AddizionaleRegionale = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText19(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CodiceCIG = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText20(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _StampaAvviso = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText21(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RitenutePrevidenzialiBen = javax.xml.bind.DatatypeConverter.parseDouble(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_RitenutePrevidenzialiBen = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
